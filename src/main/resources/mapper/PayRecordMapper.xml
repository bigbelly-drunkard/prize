<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.egg.mapper.PayRecordMapper">
  <resultMap id="BaseResultMap" type="org.egg.model.DO.PayRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="pay_no" jdbcType="VARCHAR" property="payNo" />
    <result column="pay_channel" jdbcType="VARCHAR" property="payChannel" />
    <result column="pay_type" jdbcType="VARCHAR" property="payType" />
    <result column="pay_amount" jdbcType="DECIMAL" property="payAmount" />
    <result column="channel_no" jdbcType="VARCHAR" property="channelNo" />
    <result column="pay_status" jdbcType="VARCHAR" property="payStatus" />
    <result column="error_msg" jdbcType="VARCHAR" property="errorMsg" />
    <result column="customer_no" jdbcType="VARCHAR" property="customerNo" />
    <result column="order_msg" jdbcType="VARCHAR" property="orderMsg" />
    <result column="order_type" jdbcType="VARCHAR" property="orderType" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="modified_date" jdbcType="TIMESTAMP" property="modifiedDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pay_no, pay_channel, pay_type, pay_amount, channel_no, pay_status, error_msg, 
    customer_no, order_msg, order_type, created_date, modified_date
  </sql>
  <select id="selectByExample" parameterType="org.egg.model.DO.PayRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from pay_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from pay_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pay_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.egg.model.DO.PayRecordExample">
    delete from pay_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.egg.model.DO.PayRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pay_record (pay_no, pay_channel, pay_type, 
      pay_amount, channel_no, pay_status, 
      error_msg, customer_no, order_msg, 
      order_type, created_date, modified_date
      )
    values (#{payNo,jdbcType=VARCHAR}, #{payChannel,jdbcType=VARCHAR}, #{payType,jdbcType=VARCHAR}, 
      #{payAmount,jdbcType=DECIMAL}, #{channelNo,jdbcType=VARCHAR}, #{payStatus,jdbcType=VARCHAR}, 
      #{errorMsg,jdbcType=VARCHAR}, #{customerNo,jdbcType=VARCHAR}, #{orderMsg,jdbcType=VARCHAR}, 
      #{orderType,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP}, #{modifiedDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.egg.model.DO.PayRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pay_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="payNo != null">
        pay_no,
      </if>
      <if test="payChannel != null">
        pay_channel,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="channelNo != null">
        channel_no,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="errorMsg != null">
        error_msg,
      </if>
      <if test="customerNo != null">
        customer_no,
      </if>
      <if test="orderMsg != null">
        order_msg,
      </if>
      <if test="orderType != null">
        order_type,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="modifiedDate != null">
        modified_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="payNo != null">
        #{payNo,jdbcType=VARCHAR},
      </if>
      <if test="payChannel != null">
        #{payChannel,jdbcType=VARCHAR},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="channelNo != null">
        #{channelNo,jdbcType=VARCHAR},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=VARCHAR},
      </if>
      <if test="errorMsg != null">
        #{errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="customerNo != null">
        #{customerNo,jdbcType=VARCHAR},
      </if>
      <if test="orderMsg != null">
        #{orderMsg,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null">
        #{orderType,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedDate != null">
        #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.egg.model.DO.PayRecordExample" resultType="java.lang.Integer">
    select count(*) from pay_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pay_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.payNo != null">
        pay_no = #{record.payNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payChannel != null">
        pay_channel = #{record.payChannel,jdbcType=VARCHAR},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=VARCHAR},
      </if>
      <if test="record.payAmount != null">
        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.channelNo != null">
        channel_no = #{record.channelNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.errorMsg != null">
        error_msg = #{record.errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.customerNo != null">
        customer_no = #{record.customerNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderMsg != null">
        order_msg = #{record.orderMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.orderType != null">
        order_type = #{record.orderType,jdbcType=VARCHAR},
      </if>
      <if test="record.createdDate != null">
        created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedDate != null">
        modified_date = #{record.modifiedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pay_record
    set id = #{record.id,jdbcType=BIGINT},
      pay_no = #{record.payNo,jdbcType=VARCHAR},
      pay_channel = #{record.payChannel,jdbcType=VARCHAR},
      pay_type = #{record.payType,jdbcType=VARCHAR},
      pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      channel_no = #{record.channelNo,jdbcType=VARCHAR},
      pay_status = #{record.payStatus,jdbcType=VARCHAR},
      error_msg = #{record.errorMsg,jdbcType=VARCHAR},
      customer_no = #{record.customerNo,jdbcType=VARCHAR},
      order_msg = #{record.orderMsg,jdbcType=VARCHAR},
      order_type = #{record.orderType,jdbcType=VARCHAR},
      created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      modified_date = #{record.modifiedDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.egg.model.DO.PayRecord">
    update pay_record
    <set>
      <if test="payNo != null">
        pay_no = #{payNo,jdbcType=VARCHAR},
      </if>
      <if test="payChannel != null">
        pay_channel = #{payChannel,jdbcType=VARCHAR},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="channelNo != null">
        channel_no = #{channelNo,jdbcType=VARCHAR},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=VARCHAR},
      </if>
      <if test="errorMsg != null">
        error_msg = #{errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="customerNo != null">
        customer_no = #{customerNo,jdbcType=VARCHAR},
      </if>
      <if test="orderMsg != null">
        order_msg = #{orderMsg,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null">
        order_type = #{orderType,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedDate != null">
        modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.egg.model.DO.PayRecord">
    update pay_record
    set pay_no = #{payNo,jdbcType=VARCHAR},
      pay_channel = #{payChannel,jdbcType=VARCHAR},
      pay_type = #{payType,jdbcType=VARCHAR},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      channel_no = #{channelNo,jdbcType=VARCHAR},
      pay_status = #{payStatus,jdbcType=VARCHAR},
      error_msg = #{errorMsg,jdbcType=VARCHAR},
      customer_no = #{customerNo,jdbcType=VARCHAR},
      order_msg = #{orderMsg,jdbcType=VARCHAR},
      order_type = #{orderType,jdbcType=VARCHAR},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      modified_date = #{modifiedDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>